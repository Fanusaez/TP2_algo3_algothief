@startuml
'https://plantuml.com/sequence-diagram
title: inicializacionDeAlgoThief
autonumber

Actor --> AlgoThief: iniciarJuego(String pathFile)

create Mapa
AlgoThief -> Mapa : create(String pathFile)
note over Mapa: se parsea el archivo y se hace un listado
Mapa --> AlgoThief : return listadoCiudades


 /'loop hasta listadoRecorrido.Length()
            Mapa -> Mapa:
  end'/
/'create Ciudad
Mapa -> Ciudad : create'/


/'AlgoThief --> Mapa: getCiudadAleatoria()
Mapa --> AlgoThief : unaCiudad'/

/'AlgoThief --> AcademiaPolicia : crearPolicia(1)'/
/'AcademiaPolicia --> AlgoThief : unPoliciaNovato'/

create PoliciaNovato
AlgoThief -> PoliciaNovato : create (unaCiudad)

note over Delincuente: Voy a setear segÃºn el tipo de policia, el atributo cantCiudadesDelincuente

create Delincuente
AlgoThief -> Delincuente: create (TipoPoliciaNovato)

AlgoThief -> Delincuente: obtenerRecorridoDelincuente(delincuenteObjetosComunes: Delicuente)

Delincuente -> Mapa: crearListadoCiudades(cantCiudadesDelincuente)
Mapa -> Delincuente: return listadoRecorrido
Delincuente -> AlgoThief: return listadoRecorrido

  loop hasta listadoRecorridoCiudades.Length() por edificios.length()
            AlgoThief -> Pista: crearPista(delincuente, ciudad[i], tipoEdificio[i])

  end

/'note left cantidadDeCiudades: Dar dimension del array de ciudades donde estuvo delincuente
AlgoThief -> Delincuente: cantidadDeCiudades'/



/'create ObjetoRobado
Delincuente -> ObjetoRobado: create (ObjetoComun)'/

/'Delincuente -> ObjetoRobado: getValor()
note over ObjetoRobado: Esto viola encapsulamiento
ObjetoRobado --> Delincuente: 4'/

@enduml
